<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Animated fall scene</title>
    
</head>
<body>
    
    <div id="fall-scene-container">
        <div id="sky"></div>
        <div id="ground">
            <div id="cabin-outline"></div>
            <div id="tree-silhouette-1" class="tree-silhouette"></div>
            <div id="tree-silhouette-2" class="tree-silhouette"></div>
        </div>
        
        <div id="leaf-container"></div>
        <div id="dust-container"></div>

        <div id="controls-panel">
            <label for="wind-speed">Wind Speed:</label>
            <input type="range" id="wind-speed" min="-5" max="5" value="0" step="0.5">
            <span id="wind-display">Calm</span>

            <label for="leaf-density">Leaf-Density:</label>
            <input type="range" id="leaf-density" min="10" max="150" value="50" step="10">
            <span id="density-display">50 Leaves</span>

            <button id="day-night-toggle">Toggle Day/Night</button>
        </div>
    </div>
    <style>
        
        :root {

            --day-sky-color-top: #87CEEB;
            --day-sky-color-bottom: #ADD8ED;
            --day-ground-color: #8B4513;
            --day-leaf-shadow: rgba(0, 0, 0, 0.2);

            --night-sky-color-top: #87CEEB;
            --night-sky-color-bottom: #2C3E50;
            --night-ground-color: #362818;
            --night-leaf-shadow: rgba(255, 255, 255, 0.05);

            --scene-transition-duration: 2s;
        }

        body {
            margin: 0;
            overflow: hidden;
            font-family: 'Georgia', serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        #fall-scene-container {
            width: 100vw;
            height: 100vh;
            position: relative;
            overflow: hidden;
            transition: background-color var(--scene-transition-duration) ease-in-out;
        }

        #sky {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 70%;
            background: linear-gradient(to bottom, var(--day-sky-color-top), var(--day-sky-color-bottom));
            transition: background var(--scene-transition-duration) ease-in-out;
        }

        #ground {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 30%;
            background-color: var(--day-ground-color);
            transition: background-color var(--scene-transition-duration) ease-in-out;
            border-top: 5px solid rgba(0,0,0,0.1);
            z-index: 5;
        }

        .night-mode #sky {
            background: linear-gradient(to bottom, var(--night-sky-color-top), var(--night-sky-color-bottom));
        }
        
        .night-mode #ground {
            background-color: var(--night-ground-color);
        }

        #tree-silhouette-1 {
            left:10%;
            height: 200px;
            width: 120px;
        }

        #tree-silhouette-2 {
            right: 15%;
            height: 180px;
            width: 100px;
            transform: scaleX(-1);
        }

        .night-mode .tree-silhouette {
            position: absolute;
            bottom: 30%;
            left: 45%;
            transform: translateX(-50%);
            width: 150px;
            height: 100px;
            background-color: transparent;
            border: 3px solid #362818;
            border-top: none;
            z-index: 15;
            transition: border-color var(--scene-transition-duration);
        }

        #cabin-outline::before {
            content: '';
            position: absolute;
            top: -50px;
            left:-10px;
            width: 170px;
            height: 50px;
            background-color: #362818;
            transform: skewX(-20deg);
            transform-origin: left top;
        }

        #leaf-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .leaf {
            position: absolute;
            width: 20px;
            height: 20px;
            background-color: #FFA500;
            border-radius: 0 50% 50% 50% / 50%;
            transform-origin: 50% 50%;
            opacity: 0.8;
            will-change: transform, opacity;
            box-shadow: 1px 1px 2px var(--day-leaf-shadow);
            transition: box-shadow var(--scene-transition-duration);
            }

            .night-mode .leaf {
                box-shadow: 1px 1px 2px var(--night-leaf-shadow);
            }

            .leaf.red { background-color: #FF0000; }
            .leaf.gold { background-color: #FFD700; border-radius: 50% 0 50% / 50%; }
            .leaf.brown { background-color: #8B4513; }
            .leaf.yellow { background-color: #FFFF00; }
            .leaf.orange { background-color: #FF4500; }
            
            @keyframes fall {
                0% {transform: translateY(-10vh); }
                100% { transform: translateY(110vh); }
            }

            @keyframes wobble {
                0%, 100% { transform: translateX(0); }
                50% { transform: translateX(var(--wobble-amplitude)); }
            }

            @keyframes gust {
                0% { transform: rotateZ(0deg); }
                100% { transform: rotateZ(var(--gust-rotation)) scale(1.1); }
            }

            .leaf.animate {
                animation:
                    fall var(--fall-duration) linear infinite,
                    wobble var(--wobble-duration) ease-in-out infinite alternate;
                animation-delay: var(--animation-delay);
                left: var(--start-x);
            }

            #dust-container {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                pointer-events: none;
                z-index: 9;
            }

            .dust-particle {
                position: absolute;
                width: 2px;
                height: 2px;
                background-color:rgba(255, 255, 255, 0.4);
                border-radius: 50%;
                opacity: 0;
                will-change: transform, opacity;
            }

            @keyframes dust-float {
                0% { transform: translateY(0) translateX(0) rotate(0deg); opacity: 0; }
                50% { opacity: 0.8; }
                100% { transform: translateY(-100vh) translateX(var(--dust-x-drift)) rotate(360deg); opacity: 0; }
            }

            .dust-particle.animate {
                animation: dust-float var(--dust-duration) ease-out forwards;
                animation-delay: var(--dust-delay);
            }

            #controls-panel {
                position: absolute;
                bottom: 20px;
                left: 20px;
                padding: 15px;
                background-color: rgba(0, 0, 0, 0.6);
                color: #fff;
                border-radius: 8px;
                display: flex;
                flex-direction: column;
                gap: 8px;
                z-index: 100;
            }

            #contorls-panel label {
                font-size: 0.9em;
                margin-top: 5px;
            }

            #control-panel input[type="range"] {
                width: 150px;
            }

            #controls-panel button {
                padding: 8px 15px;
                background-color: #8B4513;
                color: #fff;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                transition: background-color 0.3s;
            }

            #controls-panel button:hover {
                background-color: #a0522d;
            }

            #wind-display, #density-display {
                font-weight: bold;
                color: #ffcc00;
            }
    </style>

    <script>

        const sceneContainer = document.getElementById('fall-scene-container');
        const leafContainer = document.getElementById('leaf-container');
        const dustContainer = document.getElementById('dust-container');
        const dayNightToggleBtn = document.getElementById('day-night-toggle');
        const windSpeedInput = document.getElementById('wind-speed');
        const windDisplay = document.getElementById('wind-display');
        const leafDensityInput = document.getElementById('leaf-density');
        const densityDisplay = document.getElementById('density-display');

        let leaves = [];
        let currentLeafCount = 0;
        let maxLeaves = 50;
        let isNightMode = false;
        let currentWind = 0;
        const leafColors = ['red', 'gold', 'brown', 'yellow', 'orange'];
        const MAX_LEAF_SIZE = 30;
        const MIN_LEAF_SIZE = 15;

        function resetLeaf(leaf) {
            leaf.style.left = `${Math.random() * 100}vw`;
            leaf.style.top = `-20px`;

            leaf.className = 'leaf-animate';
            leaf.classList.add(leafColors[Math.floor(Math.random() * leafColors.length)]);

            const fallDuration = (Math.random() * 10) + 5;
            const wobbleDuration = (Math.random() * 3) + 2;
            const startDelay = -(Math.random() * 10);

            leaf.style.setProperty('--fall-duration', `${fallDuration}s`);
            leaf.style.setProperty('--wobble-duration', `${wobbleDuration}s`);
            leaf.style.setProperty('--animation-delay', `${startDelay}s`);
            leaf.style.setProperty('--wobble-amplitude', `${(Math.random() > 0.5 ? 1 : -1) * (Math.random() * 10 + 5)}px`);
        }

        function updateLeafPopulation() {
            while (currentLeafCount < maxLeaves) {
                const newLeaf = createLeafElement();
                leaves.push(newLeaf);
                resetLeaf(newLeaf);
                currentLeafCount++;
            }
            while (currentLeafCount > maxLeaves) {
                const leafToRemove = leaves.pop();
                if (leafToRemove) {
                    leafContainer.removeChild(leafToRemove);
                    currentLeafCount--;
                }
            }
        }

        function updateLeafPosition() {
            const windForce = currentWind * 0.05;

            leaves.forEach(leaf => {
                let currentX = parseFloat(leaf.style.left);
                currentX += windForce;

                if (currentX < -5) currentX = 105;
                if (currentX > 105) currentX = -5;

                leaf.style.left = `${currentX}vw`;

                const rect = leaf.getBoundingClientRect();
                if (rect.top > window.innerHeight) {
                    resetLeaf(leaf);
                }
            });

            requestAnimationFrame(updateLeafPosition);
        }

        function createDustParticle(x, y, isMouseGust = false) {
            const particle = document.createElementById('div');
            particle.classList.add('dust-particle');

            particle.style.left = `${x}px`;
            particle.style.top = `${y}px`;

            const duration = isMouseGust ? '1s' : `${(Math.random() * 8) + 12}s`;
            const delay = isMouseGust ? '0s' : `${-(Math.random() * 15)}s`;

            particle.style.setProperty('--dust-duration', duration);
            particle.style.setProperty('--dust-delay', delay);
            particle.style.setProperty('--dust-x-drift', `${(Math.random() * 500) - 250}px`);

            dustContainer.appendChild(particle);
            particle.classList.add('animate');

            setTimeout(() => {
                dustContainer.removeChild(particle);
            }, (parseFloat(duration) * 1000) + 100);
        }


    </script>
</body>
</html>
